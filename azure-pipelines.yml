# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  default

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'clean generatePomFileForReleasePublication'
    
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/app/build/publications/release/pom-default.xml'
    Contents: '**/*.xml'
    TargetFolder: '$(build.artifactstagingdirectory)'
    CleanTargetFolder: true
  displayName: 'Copy pom.xml'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(build.artifactstagingdirectory)'
    artifact: 'composables-pom.xml'
    publishLocation: 'pipeline'
  displayName: 'Publish artifacts'